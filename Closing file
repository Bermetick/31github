### Closing a File
It's important to close the file after you're done working with it. 

```python
file.close()
``` 

### Context Manager (`with` statement)
Using the `with` statement is recommended because it automatically takes care of closing the file, even if an exception occurs. 

```python
with open('example.txt', 'r') as file:
    content = file.read()
    # perform operations with the file
# file is automatically closed outside the 'with' block
``` 

### Example: Reading and Writing
Here's a simple example that reads from one file and writes to another: 

